"""initial version

Revision ID: 0d3fe2ab5de9
Revises: 
Create Date: 2022-03-03 15:47:08.732708

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0d3fe2ab5de9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('engine',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('configuration', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.CheckConstraint("version ~ '^\\d+.\\d+.\\d+(-alpha\\d{1,2}|-beta\\d{1,2}|-RC)?$'"),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('GENERAL', 'SOFTWARE', 'PRODUCT', 'DATA', 'BUSINESS', name='questioncategory'), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sample_answer', sa.Text(), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('upload',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('category', sa.Enum('INTERVIEW', 'PRESENTATION', name='uploadcategory'), nullable=False),
    sa.Column('score', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('date_uploaded', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('engine_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['engine_id'], ['engine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_upload_category'), 'upload', ['category'], unique=False)
    op.create_table('upload_question',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('upload_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('cloudfront_url', sa.Text(), nullable=True),
    sa.Column('manifest_file', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['upload_id'], ['upload.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('uq_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('category', sa.Enum('PAUSE', 'VOLUME', 'LIGHT', 'GAZE', 'EMOTION', 'PITCH', 'FILLER_WORD', name='feedbackcategory'), nullable=False),
    sa.Column('subcategory', sa.String(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('result', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('confidence', sa.Integer(), nullable=True),
    sa.Column('time_range', postgresql.INT4RANGE(), nullable=True),
    sa.Column('user_report', sa.Text(), nullable=True),
    sa.CheckConstraint('confidence BETWEEN 0 AND 100'),
    sa.ForeignKeyConstraint(['uq_id'], ['upload_question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedback')
    op.drop_table('upload_question')
    op.drop_index(op.f('ix_upload_category'), table_name='upload')
    op.drop_table('upload')
    op.drop_table('user')
    op.drop_table('question')
    op.drop_table('engine')
    # ### end Alembic commands ###
